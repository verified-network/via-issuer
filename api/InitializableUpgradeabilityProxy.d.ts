/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, ContractTransaction, EventFilter, Signer } from "ethers";
import { Listener, Provider } from "ethers/providers";
import { Arrayish, BigNumber, BigNumberish, Interface } from "ethers/utils";
import {
  TransactionOverrides,
  TypedEventDescription,
  TypedFunctionDescription,
} from ".";

interface InitializableUpgradeabilityProxyInterface extends Interface {
  functions: {
    initialize: TypedFunctionDescription<{
      encode([_logic, _data]: [string, Arrayish]): string;
    }>;
  };

  events: {
    Upgraded: TypedEventDescription<{
      encodeTopics([implementation]: [string | null]): string[];
    }>;
  };
}

export class InitializableUpgradeabilityProxy extends Contract {
  connect(
    signerOrProvider: Signer | Provider | string
  ): InitializableUpgradeabilityProxy;
  attach(addressOrName: string): InitializableUpgradeabilityProxy;
  deployed(): Promise<InitializableUpgradeabilityProxy>;

  on(
    event: EventFilter | string,
    listener: Listener
  ): InitializableUpgradeabilityProxy;
  once(
    event: EventFilter | string,
    listener: Listener
  ): InitializableUpgradeabilityProxy;
  addListener(
    eventName: EventFilter | string,
    listener: Listener
  ): InitializableUpgradeabilityProxy;
  removeAllListeners(
    eventName: EventFilter | string
  ): InitializableUpgradeabilityProxy;
  removeListener(
    eventName: any,
    listener: Listener
  ): InitializableUpgradeabilityProxy;

  interface: InitializableUpgradeabilityProxyInterface;

  functions: {
    /**
 * Contract initializer.
 * @param _data Data to send as msg.data to the implementation to initialize the proxied contract.
 It should include the signature and the parameters of the function to be called, as described in
 https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.
 This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.
 * @param _logic Address of the initial implementation.
 */
    initialize(
      _logic: string,
      _data: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    /**
 * Contract initializer.
 * @param _data Data to send as msg.data to the implementation to initialize the proxied contract.
 It should include the signature and the parameters of the function to be called, as described in
 https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.
 This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.
 * @param _logic Address of the initial implementation.
 */
    "initialize(address,bytes)"(
      _logic: string,
      _data: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;
  };

  /**
 * Contract initializer.
 * @param _data Data to send as msg.data to the implementation to initialize the proxied contract.
 It should include the signature and the parameters of the function to be called, as described in
 https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.
 This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.
 * @param _logic Address of the initial implementation.
 */
  initialize(
    _logic: string,
    _data: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  /**
 * Contract initializer.
 * @param _data Data to send as msg.data to the implementation to initialize the proxied contract.
 It should include the signature and the parameters of the function to be called, as described in
 https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.
 This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.
 * @param _logic Address of the initial implementation.
 */
  "initialize(address,bytes)"(
    _logic: string,
    _data: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  filters: {
    Upgraded(implementation: string | null): EventFilter;
  };

  estimate: {
    /**
 * Contract initializer.
 * @param _data Data to send as msg.data to the implementation to initialize the proxied contract.
 It should include the signature and the parameters of the function to be called, as described in
 https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.
 This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.
 * @param _logic Address of the initial implementation.
 */
    initialize(
      _logic: string,
      _data: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    /**
 * Contract initializer.
 * @param _data Data to send as msg.data to the implementation to initialize the proxied contract.
 It should include the signature and the parameters of the function to be called, as described in
 https://solidity.readthedocs.io/en/v0.4.24/abi-spec.html#function-selector-and-argument-encoding.
 This parameter is optional, if no data is given the initialization call to proxied contract will be skipped.
 * @param _logic Address of the initial implementation.
 */
    "initialize(address,bytes)"(
      _logic: string,
      _data: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;
  };
}
