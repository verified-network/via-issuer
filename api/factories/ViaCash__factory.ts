/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer } from "ethers";
import { Provider } from "ethers/providers";

import { ViaCash } from "../ViaCash";

export class ViaCash__factory {
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ViaCash {
    return new Contract(address, _abi, signerOrProvider) as ViaCash;
  }
}

const _abi = [
  {
    constant: false,
    inputs: [
      {
        name: "txId",
        type: "bytes32",
      },
      {
        name: "result",
        type: "bytes16",
      },
      {
        name: "rtype",
        type: "bytes32",
      },
    ],
    name: "convert",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "tokens",
        type: "bytes16",
      },
      {
        name: "sender",
        type: "address",
      },
    ],
    name: "requestAddToBalance",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "tokens",
        type: "bytes16",
      },
      {
        name: "receiver",
        type: "address",
      },
    ],
    name: "requestDeductFromBalance",
    outputs: [
      {
        name: "",
        type: "bytes16",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "sender",
        type: "address",
      },
      {
        name: "receiver",
        type: "address",
      },
      {
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
];
