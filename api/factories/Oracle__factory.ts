/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer } from "ethers";
import { Provider } from "ethers/providers";

import { Oracle } from "../Oracle";

export class Oracle__factory {
  static connect(address: string, signerOrProvider: Signer | Provider): Oracle {
    return new Contract(address, _abi, signerOrProvider) as Oracle;
  }
}

const _abi = [
  {
    constant: false,
    inputs: [
      {
        name: "_currency",
        type: "bytes32",
      },
      {
        name: "_ratetype",
        type: "bytes32",
      },
      {
        name: "_tokenType",
        type: "bytes32",
      },
      {
        name: "_tokenContract",
        type: "address",
      },
    ],
    name: "request",
    outputs: [
      {
        name: "",
        type: "bytes32",
      },
    ],
    payable: true,
    stateMutability: "payable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "_queryId",
        type: "bytes32",
      },
      {
        name: "_callbackId",
        type: "bytes32",
      },
    ],
    name: "setCallbackId",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
];
