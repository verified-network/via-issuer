/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer } from "ethers";
import { Provider } from "ethers/providers";

import { ViaToken } from "../ViaToken";

export class ViaToken__factory {
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ViaToken {
    return new Contract(address, _abi, signerOrProvider) as ViaToken;
  }
}

const _abi = [
  {
    constant: false,
    inputs: [
      {
        name: "sender",
        type: "address",
      },
      {
        name: "receiver",
        type: "address",
      },
      {
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "transferToken",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "amount",
        type: "bytes16",
      },
    ],
    name: "reduceSupply",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "party",
        type: "address",
      },
      {
        name: "amount",
        type: "bytes16",
      },
    ],
    name: "reduceBalance",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "party",
        type: "address",
      },
      {
        name: "amount",
        type: "bytes16",
      },
    ],
    name: "addBalance",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "amount",
        type: "bytes16",
      },
    ],
    name: "addTotalSupply",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "receiver",
        type: "address",
      },
      {
        name: "tokens",
        type: "uint256",
      },
    ],
    name: "requestTransfer",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        name: "amount",
        type: "bytes16",
      },
      {
        name: "payer",
        type: "address",
      },
      {
        name: "currency",
        type: "bytes32",
      },
      {
        name: "cashContract",
        type: "address",
      },
    ],
    name: "requestIssue",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
];
