/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, ContractTransaction, EventFilter, Signer } from "ethers";
import { Listener, Provider } from "ethers/providers";
import { Arrayish, BigNumber, BigNumberish, Interface } from "ethers/utils";
import {
  TransactionOverrides,
  TypedEventDescription,
  TypedFunctionDescription,
} from ".";

interface ViaBondInterface extends Interface {
  functions: {
    convert: TypedFunctionDescription<{
      encode([txId, result, rtype]: [Arrayish, Arrayish, Arrayish]): string;
    }>;

    transferForward: TypedFunctionDescription<{
      encode([_symbol, _forwarder, _sender, _receiver, _tokens]: [
        Arrayish,
        string,
        string,
        string,
        BigNumberish
      ]): string;
    }>;

    requestIssue: TypedFunctionDescription<{
      encode([amount, payer, currency, cashContract]: [
        Arrayish,
        string,
        Arrayish,
        string
      ]): string;
    }>;
  };

  events: {};
}

export class ViaBond extends Contract {
  connect(signerOrProvider: Signer | Provider | string): ViaBond;
  attach(addressOrName: string): ViaBond;
  deployed(): Promise<ViaBond>;

  on(event: EventFilter | string, listener: Listener): ViaBond;
  once(event: EventFilter | string, listener: Listener): ViaBond;
  addListener(eventName: EventFilter | string, listener: Listener): ViaBond;
  removeAllListeners(eventName: EventFilter | string): ViaBond;
  removeListener(eventName: any, listener: Listener): ViaBond;

  interface: ViaBondInterface;

  functions: {
    convert(
      txId: Arrayish,
      result: Arrayish,
      rtype: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    "convert(bytes32,bytes16,bytes32)"(
      txId: Arrayish,
      result: Arrayish,
      rtype: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    transferForward(
      _symbol: Arrayish,
      _forwarder: string,
      _sender: string,
      _receiver: string,
      _tokens: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    "transferForward(bytes32,address,address,address,uint256)"(
      _symbol: Arrayish,
      _forwarder: string,
      _sender: string,
      _receiver: string,
      _tokens: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    requestIssue(
      amount: Arrayish,
      payer: string,
      currency: Arrayish,
      cashContract: string,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    "requestIssue(bytes16,address,bytes32,address)"(
      amount: Arrayish,
      payer: string,
      currency: Arrayish,
      cashContract: string,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;
  };

  convert(
    txId: Arrayish,
    result: Arrayish,
    rtype: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  "convert(bytes32,bytes16,bytes32)"(
    txId: Arrayish,
    result: Arrayish,
    rtype: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  transferForward(
    _symbol: Arrayish,
    _forwarder: string,
    _sender: string,
    _receiver: string,
    _tokens: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  "transferForward(bytes32,address,address,address,uint256)"(
    _symbol: Arrayish,
    _forwarder: string,
    _sender: string,
    _receiver: string,
    _tokens: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  requestIssue(
    amount: Arrayish,
    payer: string,
    currency: Arrayish,
    cashContract: string,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  "requestIssue(bytes16,address,bytes32,address)"(
    amount: Arrayish,
    payer: string,
    currency: Arrayish,
    cashContract: string,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  filters: {};

  estimate: {
    convert(
      txId: Arrayish,
      result: Arrayish,
      rtype: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "convert(bytes32,bytes16,bytes32)"(
      txId: Arrayish,
      result: Arrayish,
      rtype: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    transferForward(
      _symbol: Arrayish,
      _forwarder: string,
      _sender: string,
      _receiver: string,
      _tokens: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "transferForward(bytes32,address,address,address,uint256)"(
      _symbol: Arrayish,
      _forwarder: string,
      _sender: string,
      _receiver: string,
      _tokens: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    requestIssue(
      amount: Arrayish,
      payer: string,
      currency: Arrayish,
      cashContract: string,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "requestIssue(bytes16,address,bytes32,address)"(
      amount: Arrayish,
      payer: string,
      currency: Arrayish,
      cashContract: string,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;
  };
}
