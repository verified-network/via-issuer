/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, ContractTransaction, EventFilter, Signer } from "ethers";
import { Listener, Provider } from "ethers/providers";
import { Arrayish, BigNumber, BigNumberish, Interface } from "ethers/utils";
import {
  TransactionOverrides,
  TypedEventDescription,
  TypedFunctionDescription,
} from ".";

interface StringutilsInterface extends Interface {
  functions: {
    stringToUint: TypedFunctionDescription<{ encode([s]: [string]): string }>;

    substring: TypedFunctionDescription<{
      encode([str, startIndex, endIndex]: [
        string,
        BigNumberish,
        BigNumberish
      ]): string;
    }>;

    append: TypedFunctionDescription<{
      encode([a, b]: [string, string]): string;
    }>;

    stringToBytes32: TypedFunctionDescription<{
      encode([source]: [string]): string;
    }>;

    bytes32ToString: TypedFunctionDescription<{
      encode([_bytes32]: [Arrayish]): string;
    }>;
  };

  events: {};
}

export class Stringutils extends Contract {
  connect(signerOrProvider: Signer | Provider | string): Stringutils;
  attach(addressOrName: string): Stringutils;
  deployed(): Promise<Stringutils>;

  on(event: EventFilter | string, listener: Listener): Stringutils;
  once(event: EventFilter | string, listener: Listener): Stringutils;
  addListener(eventName: EventFilter | string, listener: Listener): Stringutils;
  removeAllListeners(eventName: EventFilter | string): Stringutils;
  removeListener(eventName: any, listener: Listener): Stringutils;

  interface: StringutilsInterface;

  functions: {
    stringToUint(
      s: string,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "stringToUint(string)"(
      s: string,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    substring(
      str: string,
      startIndex: BigNumberish,
      endIndex: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<string>;

    "substring(string,uint256,uint256)"(
      str: string,
      startIndex: BigNumberish,
      endIndex: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<string>;

    append(
      a: string,
      b: string,
      overrides?: TransactionOverrides
    ): Promise<string>;

    "append(string,string)"(
      a: string,
      b: string,
      overrides?: TransactionOverrides
    ): Promise<string>;

    stringToBytes32(
      source: string,
      overrides?: TransactionOverrides
    ): Promise<string>;

    "stringToBytes32(string)"(
      source: string,
      overrides?: TransactionOverrides
    ): Promise<string>;

    bytes32ToString(
      _bytes32: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<string>;

    "bytes32ToString(bytes32)"(
      _bytes32: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<string>;
  };

  stringToUint(s: string, overrides?: TransactionOverrides): Promise<BigNumber>;

  "stringToUint(string)"(
    s: string,
    overrides?: TransactionOverrides
  ): Promise<BigNumber>;

  substring(
    str: string,
    startIndex: BigNumberish,
    endIndex: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<string>;

  "substring(string,uint256,uint256)"(
    str: string,
    startIndex: BigNumberish,
    endIndex: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<string>;

  append(
    a: string,
    b: string,
    overrides?: TransactionOverrides
  ): Promise<string>;

  "append(string,string)"(
    a: string,
    b: string,
    overrides?: TransactionOverrides
  ): Promise<string>;

  stringToBytes32(
    source: string,
    overrides?: TransactionOverrides
  ): Promise<string>;

  "stringToBytes32(string)"(
    source: string,
    overrides?: TransactionOverrides
  ): Promise<string>;

  bytes32ToString(
    _bytes32: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<string>;

  "bytes32ToString(bytes32)"(
    _bytes32: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<string>;

  filters: {};

  estimate: {
    stringToUint(
      s: string,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "stringToUint(string)"(
      s: string,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    substring(
      str: string,
      startIndex: BigNumberish,
      endIndex: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "substring(string,uint256,uint256)"(
      str: string,
      startIndex: BigNumberish,
      endIndex: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    append(
      a: string,
      b: string,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "append(string,string)"(
      a: string,
      b: string,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    stringToBytes32(
      source: string,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "stringToBytes32(string)"(
      source: string,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    bytes32ToString(
      _bytes32: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "bytes32ToString(bytes32)"(
      _bytes32: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;
  };
}
